
# coding: utf-8

# In[ ]:


#https://www.carfax.com/api/vehicles?zip=30363&radius=25&sort=BEST&page=4&dynamicRadius=false


# In[ ]:


# installs module in the kernel
#!{sys.executable} -m pip install scrapy


# In[ ]:


# import urllib.request, json 
# with urllib.request.urlopen("https://www.carfax.com/api/vehicles?zip=30363&radius=25&sort=BEST&page=4&dynamicRadius=false") as url:
#     data = json.loads(url.read().decode())
#     print(data)


# In[ ]:


data['pageSize']


# In[ ]:


data['listings'][0]


# In[ ]:


data['listings'][0]['make']
data['listings'][0]['model']
data['listings'][0]['year']
data['listings'][0]['bodytype']
data['listings'][0]['vehicleCondition']
data['listings'][0]['certified'] #certified used or not
data['listings'][0]['listPrice'] #price
data['listings'][0]['engine']
data['listings'][0]['displacement']
data['listings'][0]['drivetype']
data['listings'][0]['transmission']
data['listings'][0]['mpgCity']
data['listings'][0]['mpgCombined']
data['listings'][0]['mpgHighway']
data['listings'][0]['mileage']
data['listings'][0]['onePrice'] #estimated price generated by Carfax
data['listings'][0]['exteriorColor']
data['listings'][0]['interiorColor']
data['listings'][0]['fuel']
data['listings'][0]['dealer']['city']
data['listings'][0]['dealer']['state']
data['listings'][0]['dealer']['dealerAverageRating']
data['listings'][0]['accidentHistory']['text']
data['listings'][0]['firstSeen']
data['listings'][0]['noAccidents']
data['listings'][0]['oneOwner']
data['listings'][0]['serviceRecords'] # if service history is avaliable
data['listings'][0]['personalUse'] # was vehicle used for commercial purposes
data['listings'][0]['listingStatus'] # listing status according to carfax.

data['listings'][0]['vdpUrl'] # url of the car. In case we need to investigate specifics
data['listings'][0]['serviceHistory']['history'] # full service history. In case we need to investigate
data['listings'][0]['topOptions'] # list of top options
data['listings'][0]['vehicleUseHistory'] # full vehicle use history. Try to get out if car was leased or bought.
data['listings'][0]['dealer']['latitude'] # latitude of dealership where car is located
data['listings'][0]['dealer']['longitude']


# In[1]:


import urllib.request, json, time 
# zipcodes  Atl,   DC,    NYC,   LA,  Denver, Chicago, Seattle, DallasTX, Miami, Phoenix 
zipcodes = [30363, 20004, 10036, 90012, 80204, 60601, 98104, 75201, 33133, 85003]
Allcars = []
for zipC in zipcodes:
    
    def urlfunc(page):
        return "https://www.carfax.com/api/vehicles?zip="+str(zipC)+"&radius=500&sort=LOCATION_NEAREST&page="+page+"&dynamicRadius=false"

   
    pg = 1
    while pg <= 30:
        apiurl = urlfunc(str(pg))
        pg += 1
        print(apiurl)

        time.sleep(5)
        with urllib.request.urlopen(apiurl) as url:
            data = json.loads(url.read().decode())


            for item in data['listings']:
                make = item['make']
                model = item['model']
                year = item['year']
                bodytype = item['bodytype']
                vehicleCondition = item['vehicleCondition']
                certified = item['certified'] #certified used or not
                listPrice = item['listPrice'] #price
                engine = item['engine']
                displacement= item['displacement']
                drivetype= item['drivetype']
                transmission= item['transmission']
                mpgCity= item['mpgCity']
                mpgCombined= item['mpgCombined']
                mpgHighway= item['mpgHighway']
                mileage = item['mileage']
                onePrice = item['onePrice'] #estimated price generated by Carfax
                exteriorColor = item['exteriorColor']
                interiorColor = item['interiorColor']
                fuel = item['fuel']
                dealerCity = item['dealer']['city']
                dealerState = item['dealer']['state']
                dealerRate = item['dealer']['dealerAverageRating']
                accidentHistory = item['accidentHistory']['text']
                firstSeenday = item['firstSeen']
                noAccidents = item['noAccidents']
                oneOwner = item['oneOwner']
                serviceRecords = item['serviceRecords'] # if service history is avaliable
                personalUse = item['personalUse'] # was vehicle used for commercial purposes
                listingStatus= item['listingStatus'] # listing status according to carfax.

                detailedUrl = item['vdpUrl'] # url of the car. In case we need to investigate specifics
                serviceHistory = item['serviceHistory']['history'] # full service history. In case we need to investigate
                Options = item['topOptions'] # list of top options
                vehicleUseHistory = item['vehicleUseHistory'] 
                latitude = item['dealer']['latitude'] # latitude of dealership where car is located
                longitude = item['dealer']['longitude']


                Allcars.append({'make': make, 'model': model, 'year': year, 'bodytype': bodytype,
                                   'vehicleCondition': vehicleCondition, 'certified': certified, 'listPrice': listPrice,
                                   'engine': engine, 'displacement': displacement, 'drivetype': drivetype,
                                   'transmission': transmission, 'mpgCity': mpgCity, 'mpgCombined': mpgCombined,
                                   'mpgHighway': mpgHighway, 'mileage': mileage, 'onePrice': onePrice,
                                   'exteriorColor': exteriorColor, 'interiorColor': interiorColor,
                                   'fuel': fuel, 'dealerCity': dealerCity, 'dealerState': dealerState, 
                                   'dealerRate': dealerRate, 'accidentHistory': accidentHistory,
                                   'firstSeenday': firstSeenday, 'noAccidents': noAccidents, 'oneOwner': oneOwner,
                                   'serviceRecords': serviceRecords, 'personalUse': personalUse,
                                   'listingStatus': listingStatus, 'detailedUrl': detailedUrl,
                                   'serviceHistory': serviceHistory, 'Options': Options, 
                                    'vehicleUseHistory': vehicleUseHistory, 'latitude': latitude, 
                                    'longitude': longitude})



# In[2]:


print(len(Allcars))


# In[3]:


#print(Allcars)
import pandas as pd

df = pd.DataFrame(Allcars)
df


# In[4]:


df.to_csv("Cars6414.csv")  

